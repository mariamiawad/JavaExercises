import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.Map.Entry;
import java.util.concurrent.*;
import java.util.regex.*;

public class AnagramsString {

    // Complete the sherlockAndAnagrams function below.
    static int sherlockAndAnagrams(String s) {
    	List<Integer> arrayList = new ArrayList<Integer>();
    	Map<String, List<Integer>> map =new HashMap<String,List<Integer>>();
    	String a;
    	
    	for (int i = 1; i <s.length()-1; i++) {
			if(!map.containsKey(s.charAt(i)+"")) {
				arrayList.add(0, i);
				arrayList.add(1, 1);
				map.put(s.charAt(i)+"", arrayList);
			}
			else {
				
				arrayList.add(2, arrayList.get(1)+1);
				arrayList.add(1,i);
				map.put(s.charAt(i)+"", arrayList);
			}
		}
    	int n = 0;
    	for (Entry<String, List<Integer>> entry : map.entrySet()) {
    		if(entry.getValue().get(2)==2) {
			if(Math.abs(entry.getValue().get(1)-entry.getValue().get(0))>1) {
				n =n+2;
			}
			else 
			{
				n++;
			}
    		}
		}
    	return n;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
//        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int qItr = 0; qItr < q; qItr++) {
            String s = scanner.nextLine();

            int result = sherlockAndAnagrams(s);
System.out.println(result);
//            bufferedWriter.write(String.valueOf(result));
//            bufferedWriter.newLine();
        }

//        bufferedWriter.close();

        scanner.close();
    }
}
