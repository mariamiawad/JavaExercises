import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class BalancedString {

	// Complete the isBalanced function below.
	static String isBalanced(String s) {

		boolean isBalanced = false;
		int length = s.length();
		char symbol6 = '}';
		char symbol5 = '{';
		char symbol4 = ')';
		char symbol3 = '(';
		char symbol2 = ']';
		char symbol1 = '[';
		char[] charArray = s.toCharArray();
		Stack<Character> stack = new Stack<Character>();
		stack.push(charArray[0]);
		for (int i = 1; i < s.length(); i++) {
			if(charArray[0]== symbol1 || charArray[0] == symbol3 || charArray[0] == symbol5) {
			if (charArray[i-1] == symbol1 || charArray[i-1] == symbol3 || charArray[i-1] == symbol5) {
				stack.push(charArray[i-1]);
				
			}
				

			
			
				else if (charArray[i] == symbol2 && stack.peek() == symbol1) {

				stack.pop();
				isBalanced = true;

			} else if (charArray[i] == symbol4 && stack.peek() == symbol3) {

				stack.pop();
				isBalanced = true;

			} else if (charArray[i] == symbol6 && stack.peek() == symbol5) {

				stack.pop();
				isBalanced = true;

			} 
			
			}
			else if(charArray[0]== symbol2 || charArray[0] == symbol4 || charArray[0] == symbol6) {
			
			 if (charArray[i-1] == symbol2 || charArray[i-1] == symbol4 || charArray[i-1] == symbol6) {
				stack.push(charArray[i]);
				
			 }

			
				
			
			if (charArray[i] == symbol1 && stack.peek() == symbol2) {

				stack.pop();
				isBalanced = true;

			} else if (charArray[i] == symbol4 && stack.peek() == symbol3) {

				stack.pop();
				isBalanced = true;

			} else if (charArray[i] == symbol6 && stack.peek() == symbol5) {

				stack.pop();
				isBalanced = true;

			}
			 
			}
			else {
				isBalanced = false;
				break;
			}
		
		}
		

		if (isBalanced) {
			return "YES";

		} else {
			return "NO";
		}

	}

	private static final Scanner scanner = new Scanner(System.in);

	public static void main(String[] args) throws IOException {
//        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

		int t = scanner.nextInt();
		scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

		for (int tItr = 0; tItr < t; tItr++) {
			String s = scanner.nextLine();

			String result = isBalanced(s);
			System.out.println(result);
//            bufferedWriter.write(result);
//            bufferedWriter.newLine();
		}

//        bufferedWriter.close();

		scanner.close();
	}
}
