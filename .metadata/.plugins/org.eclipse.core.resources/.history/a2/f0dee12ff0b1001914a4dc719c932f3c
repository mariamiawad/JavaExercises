import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

public class RunningMedian {

	static ArrayList<Integer> arrayList = new ArrayList<Integer>();

	public static void getArray(int[] array) {
		int i = 1;
		Arrays.sort(array);
		BigDecimal[] arr;
		while (i < array.length - 1) {
			arr = new BigDecimal[i];
			for (int j = 0; j < arr.length - 1; j++) {
				arr[j] = new BigDecimal(array[i]);
				arr[j + 1] = new BigDecimal(array[i + 1]);

			}
			for (int j = 0; j < arr.length; j++) {

			}

		}

	}

	private static boolean isOdd(int[] array) {
		int count = 0;
		boolean isOdd = false;
		for (int i = 0; i < array.length; i++) {
			count++;
		}
		if (count % 2 == 0) {
			return false;

		} else {
			return true;
		}
	}

	public static BigDecimal[] getMedian(int[] array) {
		int length = 0;
		boolean isOdd = isOdd(array);
		int arr[] = null;
		BigDecimal size = null;
		BigDecimal[] tempArray;
		if (isOdd) {
			tempArray = new BigDecimal[(array.length - 1)];
		} else {
			tempArray = new BigDecimal[array.length];
		}
		int average = 0;
		for (int i = 1; i < array.length - 1; i++) {

			arr = new int[i + 1];
			for (int j = 0; j < arr.length - 1; j++) {
				arr[j] = array[j];
				arr[j + 1] = array[j + 1];
				size = new BigDecimal(arr.length - 1);
				isOdd = isOdd(arr);
				if (isOdd(arr)) {

					tempArray[i] = new BigDecimal(
							arr[size.divide(new BigDecimal(arr.length / 2), RoundingMode.HALF_UP).intValue()]);
				} else {
					BigDecimal x = new BigDecimal(arr[(size.intValue())] + (arr[(size.intValue() / 2) + 1]));
					tempArray[i-1] = x.divide(new BigDecimal(2)).setScale(1);
				}

			}

		}
		return tempArray;

	}

	private static final Scanner scanner = new Scanner(System.in);

	public static void main(String[] args) {
		int n = scanner.nextInt();
		scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

		int[] a = new int[n];

		for (int i = 0; i < n; i++) {
			int aItem = scanner.nextInt();
			scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");
			a[i] = aItem;
		}

		scanner.close();
		getMedian(a);
	}
}
