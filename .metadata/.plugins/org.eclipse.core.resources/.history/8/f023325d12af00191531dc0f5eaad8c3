import java.util.*;

import javax.swing.text.TabableView;

import org.omg.CORBA.Current;
import org.w3c.dom.ls.LSException;

import java.io.*;

//class Node {
//    Node left;
//    Node right;
//    int data;
//    
//    Node(int data) {
//        this.data = data;
//        left = null;
//        right = null;
//    }
//}

class TopView {

	/*
	 * 
	 * class Node int data; Node left; Node right;
	 */

	static List<Node> list = new LinkedList<Node>();
	static List<Integer> listInt = new LinkedList<Integer>();
	static Node tempNode = null;
	public static void topView(Node root) {
	     
	     if(root==null)
	      return;
	     Stack<Integer> s=new Stack<Integer>();
	     s.push(root.data);
	     Node root2=root;
	     while(root.left!=null)
	     {
	      s.push(root.left.data);
	      root=root.left;
	     }
	     while(s.size()!=0)
	      System.out.print(s.pop()+" ");

	     Queue<Integer> q=new LinkedList<Integer>(); 
	     q.add(root2.right.data);
	     root2=root2.right;     
	     while(root2.right!=null)
	     {
	      q.add(root2.right.data);
	      root2=root2.right;
	     }
	     while(q.size()!=0)
	      System.out.print(q.poll()+" ");
	 
	      }

//		   if( root.right != null && root.left==null) {
//			 list.add(root.left);
//			 for (Node node : list) {
//				 System.out.print(node.data);
//			}

//		}

	public static Node insert(Node root, int data) {
		if (root == null) {
			return new Node(data);
		} else {
			Node cur;
			if (data <= root.data) {
				cur = insert(root.left, data);
				root.left = cur;
			} else {
				cur = insert(root.right, data);
				root.right = cur;
			}
			return root;
		}
	}

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int t = scan.nextInt();
		Node root = null;
		while (t-- > 0) {
			int data = scan.nextInt();
			root = insert(root, data);
		}

		scan.close();
		topView(root);
	}
}